expiter(a, n) 
{
  var v, i;
  v = a;
  i = 1;
  while ((n > i)) 
    {
      v = (v * a);
      i = (i + 1);
    }
  return v;
}

exprec(a, n) 
{
  var r;
  if ((n == 1)) 
    r = a;
  else
    r = (a * exprec(a, (n - 1)));
  return r;
}

main() 
{
  if ((expiter(2, 10) != 1024)) 
    error expiter(2, 10);
  if ((exprec(2, 10) != 1024)) 
    error exprec(2, 10);
  if ((exprec(2, expiter(2, 4)) != 65536)) 
    error exprec(2, expiter(2, 4));
  return 0;
}

Functions : {
  expiter : (int,int) -> int,
  exprec : (int,int) -> int,
  main : () -> int
}

Locals for function expiter : {
  a : int,
  i : int,
  n : int,
  v : int
}

Locals for function exprec : {
  a : int,
  n : int,
  r : int
}

Locals for function main : {

}
